// <auto-generated />
using System;
using Domain.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Domain.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240503160550_UpdateTaakAlumno03052024")]
    partial class UpdateTaakAlumno03052024
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.TaakAlumno", b =>
                {
                    b.Property<int>("AlumnoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AlumnoId"));

                    b.Property<string>("AnioCurso")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ApellidoMaterno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CarreraId")
                        .HasColumnType("integer");

                    b.Property<int>("CasaEstudioId")
                        .HasColumnType("integer");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Comuna")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("DatoBancarioId")
                        .HasColumnType("integer");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NumeroDpto")
                        .HasColumnType("text");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProspectoId")
                        .HasColumnType("integer");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Rut")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SegundoNombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("AlumnoId");

                    b.HasIndex("CarreraId");

                    b.HasIndex("CasaEstudioId");

                    b.HasIndex("DatoBancarioId");

                    b.HasIndex("ProspectoId");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("taak_alumno");
                });

            modelBuilder.Entity("Domain.Models.TaakBanco", b =>
                {
                    b.Property<int>("BancoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BancoId"));

                    b.Property<string>("Banco")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("BancoId");

                    b.ToTable("taak_banco");
                });

            modelBuilder.Entity("Domain.Models.TaakCarrera", b =>
                {
                    b.Property<int>("CarreraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CarreraId"));

                    b.Property<string>("Carrera")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CarreraId");

                    b.ToTable("taak_carrera");
                });

            modelBuilder.Entity("Domain.Models.TaakCasaEstudio", b =>
                {
                    b.Property<int>("CasaEstudioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CasaEstudioId"));

                    b.Property<string>("CasaEstudio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CasaEstudioId");

                    b.ToTable("taak_casa_estudio");
                });

            modelBuilder.Entity("Domain.Models.TaakComuna", b =>
                {
                    b.Property<int>("ComunaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ComunaId"));

                    b.Property<string>("Comuna")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RegionId")
                        .HasColumnType("integer");

                    b.HasKey("ComunaId");

                    b.HasIndex("RegionId");

                    b.ToTable("taak_comuna");
                });

            modelBuilder.Entity("Domain.Models.TaakDatosBancario", b =>
                {
                    b.Property<int>("DatoBancarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DatoBancarioId"));

                    b.Property<int>("BancoId")
                        .HasColumnType("integer");

                    b.Property<int>("NroCuenta")
                        .HasColumnType("integer");

                    b.Property<int>("TipoCuentaId")
                        .HasColumnType("integer");

                    b.HasKey("DatoBancarioId");

                    b.HasIndex("BancoId");

                    b.HasIndex("TipoCuentaId");

                    b.ToTable("taak_datos_bancarios");
                });

            modelBuilder.Entity("Domain.Models.TaakDominio", b =>
                {
                    b.Property<int>("DominioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DominioId"));

                    b.Property<int>("CasaEstudioId")
                        .HasColumnType("integer");

                    b.Property<string>("Dominio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DominioId");

                    b.HasIndex("CasaEstudioId");

                    b.ToTable("taak_dominio");
                });

            modelBuilder.Entity("Domain.Models.TaakLog", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LogId"));

                    b.Property<string>("Descipcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("LogId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("taak_log");
                });

            modelBuilder.Entity("Domain.Models.TaakProspecto", b =>
                {
                    b.Property<int>("ProspectoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProspectoId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ProspectoId");

                    b.ToTable("taak_prospecto");
                });

            modelBuilder.Entity("Domain.Models.TaakRegion", b =>
                {
                    b.Property<int>("RegionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RegionId"));

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("RegionId");

                    b.ToTable("taak_region");
                });

            modelBuilder.Entity("Domain.Models.TaakTipoCuenta", b =>
                {
                    b.Property<int>("TipoCuentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TipoCuentaId"));

                    b.Property<string>("TipoCuenta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("TipoCuentaId");

                    b.ToTable("taak_tipo_cuenta");
                });

            modelBuilder.Entity("Domain.Models.TaakTipoUsuario", b =>
                {
                    b.Property<int>("TipoUsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TipoUsuarioId"));

                    b.Property<string>("TipoUsuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("TipoUsuarioId");

                    b.ToTable("taak_tipo_usuario");
                });

            modelBuilder.Entity("Domain.Models.TaakUsuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("Contrasenia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SecretKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TipoUsuarioId")
                        .HasColumnType("integer");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UsuarioId");

                    b.HasIndex("TipoUsuarioId");

                    b.ToTable("taak_usuario");
                });

            modelBuilder.Entity("Domain.Models.TaakAlumno", b =>
                {
                    b.HasOne("Domain.Models.TaakCarrera", "Carrera")
                        .WithMany()
                        .HasForeignKey("CarreraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.TaakCasaEstudio", "CasaEstudio")
                        .WithMany()
                        .HasForeignKey("CasaEstudioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.TaakDatosBancario", "DatoBancario")
                        .WithMany()
                        .HasForeignKey("DatoBancarioId");

                    b.HasOne("Domain.Models.TaakProspecto", "Prospecto")
                        .WithMany()
                        .HasForeignKey("ProspectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.TaakUsuario", "Usuario")
                        .WithOne("TaakAlumno")
                        .HasForeignKey("Domain.Models.TaakAlumno", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrera");

                    b.Navigation("CasaEstudio");

                    b.Navigation("DatoBancario");

                    b.Navigation("Prospecto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Models.TaakComuna", b =>
                {
                    b.HasOne("Domain.Models.TaakRegion", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("Domain.Models.TaakDatosBancario", b =>
                {
                    b.HasOne("Domain.Models.TaakBanco", "Banco")
                        .WithMany()
                        .HasForeignKey("BancoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.TaakTipoCuenta", "TipoCuenta")
                        .WithMany()
                        .HasForeignKey("TipoCuentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Banco");

                    b.Navigation("TipoCuenta");
                });

            modelBuilder.Entity("Domain.Models.TaakDominio", b =>
                {
                    b.HasOne("Domain.Models.TaakCasaEstudio", "CasaEstudio")
                        .WithMany()
                        .HasForeignKey("CasaEstudioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CasaEstudio");
                });

            modelBuilder.Entity("Domain.Models.TaakLog", b =>
                {
                    b.HasOne("Domain.Models.TaakUsuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Models.TaakUsuario", b =>
                {
                    b.HasOne("Domain.Models.TaakTipoUsuario", "TipoUsuario")
                        .WithMany()
                        .HasForeignKey("TipoUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoUsuario");
                });

            modelBuilder.Entity("Domain.Models.TaakUsuario", b =>
                {
                    b.Navigation("TaakAlumno")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
